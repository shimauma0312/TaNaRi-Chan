name: テスト自動実行

# プッシュとプルリクエストのトリガー
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    # feature ブランチから develop への PR も含む
    types: [ opened, synchronize, reopened ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    # Node.js のマトリックステスト（複数バージョンでテスト可能）
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    # リポジトリをチェックアウト
    - name: リポジトリをチェックアウト
      uses: actions/checkout@v4
    
    # Node.js をセットアップ
    - name: Node.js ${{ matrix.node-version }} をセットアップ
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'src/package*.json'
    
    # 依存関係をインストール
    - name: 依存関係をインストール
      run: |
        cd src
        # package-lock.jsonが存在しない場合は生成
        if [ ! -f package-lock.json ]; then
          npm install --package-lock-only
        fi
        npm ci
    
    # セキュリティ監査
    - name: セキュリティ監査
      run: |
        cd src
        npm audit --audit-level=high
      continue-on-error: true
    
    # ESLint によるコード検証
    - name: ESLint 実行
      run: |
        cd src
        npm run lint
    
    # Jest テストを実行
    - name: Jest テスト実行
      run: |
        cd src
        npm run test -- --passWithNoTests --watchAll=false
      env:
        NODE_ENV: test
        CI: true
        DATABASE_URL: "postgresql://test:test@localhost:5432/testdb"
    
    # テストカバレッジを生成
    - name: テストカバレッジ生成
      run: |
        cd src
        npm run test:coverage -- --passWithNoTests --watchAll=false
    
    # カバレッジレポートをアップロード（オプション）
    - name: カバレッジレポートをアップロード
      uses: codecov/codecov-action@v4
      with:
        file: src/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
