name: Develop ブランチPR検証

# develop ブランチへの PR 専用ワークフロー
on:
  pull_request:
    branches: [ develop ]
    types: [ opened, synchronize, reopened ]

jobs:
  develop-pr-check:
    runs-on: ubuntu-latest
    
    steps:
    # リポジトリをチェックアウト
    - name: リポジトリをチェックアウト
      uses: actions/checkout@v4
      with:
        # PR の HEAD を取得
        ref: ${{ github.event.pull_request.head.sha }}
    
    # PR 情報を表示
    - name: PR情報を表示
      run: |
        echo "🔄 Develop ブランチへのPR検証"
        echo "📋 PR情報:"
        echo "  - ソースブランチ: ${{ github.event.pull_request.head.ref }}"
        echo "  - ターゲットブランチ: ${{ github.event.pull_request.base.ref }}"
        echo "  - タイトル: ${{ github.event.pull_request.title }}"
        echo "  - 作成者: ${{ github.event.pull_request.user.login }}"
        echo "  - PR番号: #${{ github.event.pull_request.number }}"
    
    # Node.js をセットアップ
    - name: Node.js をセットアップ
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: 'src/package-lock.json'
    
    # 依存関係をインストール
    - name: 依存関係をインストール
      run: |
        cd src
        npm install --legacy-peer-deps
    
    # 高速テスト実行（develop PR 専用）
    - name: 高速テスト実行
      run: |
        cd src
        npm run test -- --passWithNoTests --silent --watchAll=false
      env:
        NODE_ENV: test
        CI: true
        DATABASE_URL: "postgresql://test:test@localhost:5432/testdb"
    
    # ESLint 実行
    - name: ESLint 実行
      run: |
        cd src
        npm run lint
    
    # TypeScript 型チェック
    - name: TypeScript 型チェック
      run: |
        cd src
        npx tsc --noEmit
    
    # ビルドテスト
    - name: ビルドテスト
      run: |
        cd src
        npm run build
      env:
        NODE_ENV: production
        DATABASE_URL: "postgresql://test:test@localhost:5432/testdb"
    
    # 検証完了メッセージ
    - name: 検証完了
      run: |
        echo "✅ Develop ブランチPR検証が完了しました！"
        echo "🎯 すべてのチェックが正常に通過"
        echo "🚀 マージ準備完了"
